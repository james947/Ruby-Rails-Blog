# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    filters:  # using regex filters requires the entire branch to match
      branches:
        only:  # only branches matching the below regex filters will run
          - develop
          - /ft-.*/
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci
          RAILS_ENV: test
      - image: circleci/postgres:9.5
        environment:
          POSTGRES_USER: jamesmuriuki
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ""

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/Ruby-Rails-Blog

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Run rspec in parallel
      - run:
          name: Run rspec tests
          command: |
            bundle exec rspec --exclude-pattern "spec/features/*_spec.rb" spec
          after_success:

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: coverage
          prefix: coverage
